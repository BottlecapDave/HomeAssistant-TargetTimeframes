blueprint:
  name: Target Timeframes - Octopus Energy and Carbon Intensity source
  description: Configures a target timeframe data source that priorities Octopus Energy and then falls back onto Carbon Intensity where the rate is the same
  domain: automation
  author: BottlecapDave
  input:
    target_timeframe_data_source_sensor:
      name: Target timeframe data source sensor
      description: The data source sensor which represents the data source to update
      selector:
        entity:
          filter:
          - domain:
            - sensor
            integration: target_timeframes
          multiple: false
    octopus_energy_current_day_rates:
      name: Current day rates
      description: The current day rates event sensor supplied by Octopus Energy. More information can be found at https://bottlecapdave.github.io/HomeAssistant-OctopusEnergy/entities/electricity/#current-day-rates.
      selector:
        entity:
          filter:
          - domain:
            - event
            integration: octopus_energy
          multiple: false
    octopus_energy_next_day_rates:
      name: Next day rates
      description: The next day rates event sensor supplied by Octopus Energy. More information can be found at https://bottlecapdave.github.io/HomeAssistant-OctopusEnergy/entities/electricity/#current-day-rates.
      selector:
        entity:
          filter:
          - domain:
            - event
            integration: octopus_energy
          multiple: false
    octopus_energy_free_electricity:
      name: Free Electricity events
      description: The free electricity event sensor supplied by Octopus Energy. More information can be found at https://bottlecapdave.github.io/HomeAssistant-OctopusEnergy/entities/octoplus/#free-electricity-session-events.
      selector:
        entity:
          filter:
          - domain:
            - event
            integration: octopus_energy
          multiple: false
    octopus_energy_free_electricity_weighting:
      name: Free Electricity weighting
      description: The weighting to apply to the value if a rate period falls within a free electricity session.
      default: 1
      selector:
        number:
          mode: box
    octopus_energy_weighting:
      name: Octopus Energy rate weighting
      description: The weighting to apply to the Octopus Energy rates when calculating the final value for the period.
      default: 0.7
      selector:
        number:
          mode: box
    carbon_intensity_current_day_rates:
      name: Current day rates
      description: The current day rates event sensor supplied by Carbon Intensity. More information can be found at https://bottlecapdave.github.io/HomeAssistant-CarbonIntensity/entities/#current-day-rates.
      selector:
        entity:
          filter:
          - domain:
            - event
            integration: carbon_intensity
          multiple: false
    carbon_intensity_next_day_rates:
      name: Next day rates
      description: The next day rates event sensor supplied by Carbon Intensity. More information can be found at https://bottlecapdave.github.io/HomeAssistant-CarbonIntensity/entities/#next-day-rates.
      selector:
        entity:
          filter:
          - domain:
            - event
            integration: carbon_intensity
          multiple: false
    carbon_intensity_weighting:
      name: Carbon Intensity forecast weighting
      description: The weighting to apply to the Carbon Intensity forecast when calculating the final value for the period.
      default: 0.3
      selector:
        number:
          mode: box
variables:
  target_timeframe_data_source_sensor: !input target_timeframe_data_source_sensor
  octopus_energy_current_day_rates: !input octopus_energy_current_day_rates
  octopus_energy_next_day_rates: !input octopus_energy_next_day_rates
  octopus_energy_free_electricity: !input octopus_energy_free_electricity
  octopus_energy_free_electricity_weighting: !input octopus_energy_free_electricity_weighting
  carbon_intensity_current_day_rates: !input carbon_intensity_current_day_rates
  carbon_intensity_next_day_rates: !input carbon_intensity_next_day_rates
  octopus_energy_weighting: !input octopus_energy_weighting
  carbon_intensity_weighting: !input carbon_intensity_weighting
mode: queued
max: 4
triggers:
- platform: state
  entity_id: !input octopus_energy_current_day_rates
- platform: state
  entity_id: !input octopus_energy_next_day_rates
- platform: state
  entity_id: !input octopus_energy_free_electricity
- platform: state
  entity_id: !input carbon_intensity_current_day_rates
- platform: state
  entity_id: !input carbon_intensity_next_day_rates
condition: []
action:
- action: target_timeframes.update_target_timeframe_data_source
  data: >
    {%- set all_oe_rates = [] -%}
    {%- if state_attr(octopus_energy_current_day_rates, 'rates') != None -%}
      {%- set all_oe_rates = all_oe_rates + state_attr(octopus_energy_current_day_rates, 'rates') -%}
    {%- endif -%}
    {%- if state_attr(octopus_energy_next_day_rates, 'rates') != None -%}
      {%- set all_oe_rates = all_oe_rates + state_attr(octopus_energy_next_day_rates, 'rates') -%}
    {%- endif -%}
    {%- set free_electricity_rates = [] -%}
    {%- if state_attr(octopus_energy_free_electricity, 'rates') != None -%}
      {%- set free_electricity_rates = state_attr(octopus_energy_free_electricity, 'events') -%}
    {%- endif -%}

    {%- set all_ci_rates = [] -%}
    {%- if state_attr(carbon_intensity_current_day_rates, 'rates') != None -%}
      {%- set all_ci_rates = all_ci_rates + state_attr(carbon_intensity_current_day_rates, 'rates') -%}
    {%- endif -%}
    {%- if state_attr(carbon_intensity_next_day_rates, 'rates') != None -%}
      {%- set all_ci_rates = all_ci_rates + state_attr(carbon_intensity_next_day_rates, 'rates') -%}
    {%- endif -%}

    {%- set min_rate = all_oe_rates | map(attribute='value_inc_vat') | min -%}
    {%- set max_rate = all_oe_rates | map(attribute='value_inc_vat') | max -%}
    {%- set min_carbon = all_ci_rates | map(attribute='intensity_forecast') | min -%}
    {%- set max_carbon = all_ci_rates | map(attribute='intensity_forecast') | max -%}

    {%- set data = namespace(new_rates=[]) -%}
    {%- for rate in all_oe_rates -%}
      {%- set start = rate["start"] | as_timestamp | timestamp_utc -%}
      {%- set end = rate["end"] | as_timestamp | timestamp_utc -%}
      {%- set value = 1 - ((rate["value_inc_vat"] | float - min_rate) / (max_rate - min_rate) * octopus_energy_weighting) -%}
      
      {%- set free_namespace = namespace(is_free=False) -%}
      {%- for free_session in free_electricity_rates -%}
        {%- set free_start = free_session["start"] | as_timestamp | timestamp_utc -%}
        {%- set free_end = free_session["end"] | as_timestamp | timestamp_utc -%}
        {%- if free_start <= start and free_end > start -%}
          {%- set free_namespace.is_free = True -%}
        {%- endif -%}
      {%- endfor -%}
      
      {%- set carbon_intensity_namespace = namespace(rate=None) -%}
      {%- for carbon_intensity_rate in all_ci_rates -%}
        {%- set carbon_intensity_start = carbon_intensity_rate["from"] | as_timestamp | timestamp_utc -%}
        {%- set carbon_intensity_end = carbon_intensity_rate["to"] | as_timestamp | timestamp_utc -%}
        {%- if carbon_intensity_start == start and carbon_intensity_end == end -%}
          {%- set carbon_intensity_namespace.rate = carbon_intensity_rate -%}
        {%- endif -%}
      {%- endfor -%}

      {%- set metadata = { "rate": rate["value_inc_vat"], "is_capped": rate["is_capped"] } -%}
      {%- if carbon_intensity_namespace.rate -%}
        {%- set value = value + (1 - ((carbon_intensity_namespace.rate["intensity_forecast"] | float - min_carbon) / (max_carbon - min_carbon) * carbon_intensity_weighting)) -%}
        {%- set metadata = dict(metadata.items(), carbon_intensity=carbon_intensity_namespace.rate["intensity_forecast"] | float) -%}
      {%- endif -%}
      
      {%- if free_namespace.is_free -%}
        {%- set value = value * octopus_energy_free_electricity_weighting -%}
        {%- set metadata = dict(metadata.items(), is_free_session=free_namespace.is_free) -%}
      {%- endif -%}
      
      {%- set new_rate = [{ 'start': start , 'end': end, 'value': value, 'metadata': metadata }] -%}
      
      {%- set data.new_rates = data.new_rates + new_rate -%}
    {%- endfor -%}
    {{ { 'data': data.new_rates } }}
  target:
    entity_id: !input target_timeframe_data_source_sensor
