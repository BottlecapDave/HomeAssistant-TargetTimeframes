blueprint:
  name: Target Timeframes - Octopus Energy source
  description: Configures a targe timeframe data source from Octopus Energy
  domain: automation
  author: BottlecapDave
  input:
    target_timeframe_data_source_sensor:
      name: Target timeframe data source sensor
      description: The data source sensor which represents the data source to update
      selector:
        entity:
          filter:
          - domain:
            - sensor
            integration: target_timeframes
          multiple: false
    octopus_energy_previous_day_rates:
      name: Previous day rates
      description: The previous day rates event sensor supplied by Octopus Energy
      selector:
        entity:
          filter:
          - domain:
            - event
            integration: octopus_energy
          multiple: false
    octopus_energy_current_day_rates:
      name: Current day rates
      description: The current day rates event sensor supplied by Octopus Energy
      selector:
        entity:
          filter:
          - domain:
            - event
            integration: octopus_energy
          multiple: false
    octopus_energy_next_day_rates:
      name: Next day rates
      description: The next day rates event sensor supplied by Octopus Energy
      selector:
        entity:
          filter:
          - domain:
            - event
            integration: octopus_energy
          multiple: false
    octopus_energy_free_electricity:
      name: Free Electricity events
      description: The free electricity event sensor supplied by Octopus Energy
      selector:
        entity:
          filter:
          - domain:
            - event
            integration: octopus_energy
          multiple: false
    octopus_energy_free_electricity_weighting:
      name: Free Electricity events
      description: The free electricity event sensor supplied by Octopus Energy
      default: 1
      selector:
        number:
          mode: box
variables:
  target_timeframe_data_source_sensor: !input target_timeframe_data_source_sensor
  octopus_energy_previous_day_rates: !input octopus_energy_previous_day_rates
  octopus_energy_current_day_rates: !input octopus_energy_current_day_rates
  octopus_energy_next_day_rates: !input octopus_energy_next_day_rates
  octopus_energy_free_electricity: !input octopus_energy_free_electricity
  octopus_energy_free_electricity_weighting: !input octopus_energy_free_electricity_weighting
mode: queued
max: 4
triggers:
- platform: state
  entity_id: !input octopus_energy_current_day_rates
- platform: state
  entity_id: !input octopus_energy_next_day_rates
condition: []
action:
- action: target_timeframes.update_target_timeframe_data_source
  data: >
    {% set all_rates = [] %}
    {% if state_attr(octopus_energy_previous_day_rates, 'rates') != None %}
    {% set all_rates = all_rates + state_attr(octopus_energy_previous_day_rates, 'rates') %}
    {% endif %}
    {% if state_attr(octopus_energy_current_day_rates, 'rates') != None %}
    {% set all_rates = all_rates + state_attr(octopus_energy_current_day_rates, 'rates') %}
    {% endif %}
    {% if state_attr(octopus_energy_next_day_rates, 'rates') != None %}
    {% set all_rates = all_rates + state_attr(octopus_energy_next_day_rates, 'rates') %}
    {% endif %}
    {% set free_electricity_rates = [] %}
    {# {% if state_attr(octopus_energy_free_electricity, 'rates') != None %}
    {% set free_electricity_rates = state_attr(octopus_energy_free_electricity, 'events') %}
    {% endif %} #}
    {% set data = namespace(new_rates=[]) %}
    {% for rate in all_rates %}
    {% set start = rate["start"] | as_timestamp | timestamp_utc %}
    {% set end = rate["end"] | as_timestamp | timestamp_utc %}
    {% set value = rate["value_inc_vat"] | float %}
    {% set free_namespace = namespace(is_free=False) %}
    {% for free_session in free_electricity_rates %}
    {% set free_start = free_session["start"] | as_timestamp | timestamp_utc %}
    {% set free_end = free_session["end"] | as_timestamp | timestamp_utc %}
    {% if free_start <= start and free_end > start %}
    {% set free_namespace.is_free = True %}
    {% endif %}
    {% endfor %}

    {% set metadata = { "is_capped": rate["is_capped"] } %}
    {% if free_namespace.is_free %}
    {% set value = value * octopus_energy_free_electricity_weighting %}
    {% set metadata = dict(metadata.items(), rate=rate["value_inc_vat"], is_free_session=free_namespace.is_free) %}
    {% endif %}

    {% set new_rate = [{ 'start': start , 'end': end, 'value': value, 'metadata': metadata }] %}

    {% set data.new_rates = data.new_rates + new_rate %}
    {% endfor %}
    {{ { 'data': data.new_rates } }}
  target:
    entity_id: !input target_timeframe_data_source_sensor
